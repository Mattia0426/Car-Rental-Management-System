/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class CheckOut extends javax.swing.JFrame {

    private int delayInDays;
    private double fine;
    private double total;
    private double rentFee;

    public CheckOut() {
        initComponents();
        displayReturnedCar();
        loadRentID();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        dashlbl = new javax.swing.JLabel();
        vlbl = new javax.swing.JLabel();
        clbl = new javax.swing.JLabel();
        inlbl = new javax.swing.JLabel();
        outlbl = new javax.swing.JLabel();
        loglbl = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        returntbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cmbrent = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        ridtxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        returndate = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        duetxt = new javax.swing.JTextField();
        finetxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        CALBTN = new javax.swing.JButton();
        ADDBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(227, 244, 255));

        jPanel2.setBackground(new java.awt.Color(51, 0, 102));

        dashlbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        dashlbl.setForeground(new java.awt.Color(255, 255, 255));
        dashlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dashlbl.setText("DASHBOARD");
        dashlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashlblMouseClicked(evt);
            }
        });

        vlbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        vlbl.setForeground(new java.awt.Color(255, 255, 255));
        vlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vlbl.setText("VEHICLE");
        vlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vlblMouseClicked(evt);
            }
        });

        clbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        clbl.setForeground(new java.awt.Color(255, 255, 255));
        clbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clbl.setText("CUSTOMER");
        clbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clblMouseClicked(evt);
            }
        });

        inlbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        inlbl.setForeground(new java.awt.Color(255, 255, 255));
        inlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        inlbl.setText("CHECK-IN");
        inlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inlblMouseClicked(evt);
            }
        });

        outlbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        outlbl.setForeground(new java.awt.Color(255, 255, 255));
        outlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        outlbl.setText("CHECK-OUT");
        outlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                outlblMouseClicked(evt);
            }
        });

        loglbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        loglbl.setForeground(new java.awt.Color(255, 255, 255));
        loglbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loglbl.setText("LOGOUT");
        loglbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loglblMouseClicked(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/dashicon.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(loglbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(outlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dashlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dashlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(vlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(clbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(inlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(outlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loglbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        returntbl.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        returntbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Booking ID", "Departure ID", "Departure Date", "Overdue", "Penalty", "Total"
            }
        ));
        returntbl.setGridColor(new java.awt.Color(255, 255, 255));
        returntbl.setRowHeight(40);
        returntbl.setSelectionBackground(new java.awt.Color(51, 0, 102));
        returntbl.setSelectionForeground(new java.awt.Color(153, 204, 255));
        jScrollPane1.setViewportView(returntbl);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Booking ID");

        cmbrent.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cmbrent.setForeground(new java.awt.Color(0, 102, 153));
        cmbrent.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--select--" }));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Departure ID");

        ridtxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ridtxt.setForeground(new java.awt.Color(0, 102, 153));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Departure Date");

        returndate.setForeground(new java.awt.Color(0, 102, 153));
        returndate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Overdue");

        duetxt.setBackground(new java.awt.Color(102, 153, 255));
        duetxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        duetxt.setForeground(new java.awt.Color(0, 0, 153));

        finetxt.setBackground(new java.awt.Color(102, 153, 255));
        finetxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        finetxt.setForeground(new java.awt.Color(0, 0, 153));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Penalty");

        CALBTN.setBackground(new java.awt.Color(51, 0, 102));
        CALBTN.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        CALBTN.setForeground(new java.awt.Color(255, 255, 255));
        CALBTN.setText("CALCULATE");
        CALBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CALBTNActionPerformed(evt);
            }
        });

        ADDBTN.setBackground(new java.awt.Color(51, 0, 102));
        ADDBTN.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ADDBTN.setForeground(new java.awt.Color(255, 255, 255));
        ADDBTN.setText("SAVE");
        ADDBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbrent, 0, 120, Short.MAX_VALUE)
                            .addComponent(duetxt))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(finetxt, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(ridtxt))
                        .addGap(52, 52, 52)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(returndate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ADDBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CALBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(45, 45, 45))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(cmbrent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addComponent(ridtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addComponent(returndate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(duetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(finetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(CALBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ADDBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void dashlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashlblMouseClicked
        Dashboard newform = new Dashboard();
        newform.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        newform.pack();
        newform.setVisible(true);
        dispose();   // TODO add your handling code here:
    }//GEN-LAST:event_dashlblMouseClicked

    private void vlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vlblMouseClicked
        VehicleRegistration newform = new VehicleRegistration();
        newform.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        newform.pack();
        newform.setVisible(true);
        dispose(); // TODO add your handling code here:
    }//GEN-LAST:event_vlblMouseClicked

    private void clblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clblMouseClicked
        CustomerRegistration newform = new CustomerRegistration();
        newform.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        newform.pack();
        newform.setVisible(true);
        dispose(); // TODO add your handling code here:
    }//GEN-LAST:event_clblMouseClicked

    private void inlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inlblMouseClicked
        Booking newform = new Booking();
        newform.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        newform.pack();
        newform.setVisible(true);
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_inlblMouseClicked

    private void outlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outlblMouseClicked
        CheckOut newform = new CheckOut();
        newform.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        newform.pack();
        newform.setVisible(true);
        dispose();// TODO add your handling code here:
    }//GEN-LAST:event_outlblMouseClicked

    private void loglblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loglblMouseClicked
        int choice = JOptionPane.showConfirmDialog(this, "Are you sure you want to Logout?", "Logout Confirmation", JOptionPane.YES_NO_OPTION);

        if (choice == JOptionPane.YES_OPTION) {
            // User clicked "Yes", so proceed with the logout
            dispose();
            LoginForm newform = new LoginForm();
            newform.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            newform.pack();
            newform.setVisible(true);
        } else {
            // User clicked "No," so take no action
        }        // TODO add your handling code here:
    }//GEN-LAST:event_loglblMouseClicked

    private void ADDBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDBTNActionPerformed

        try {
            String selectedrentid = cmbrent.getSelectedItem().toString();

            // Establish a database connection
            try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/carrental?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "")) {
                // SQL query to retrieve the price of a car based on its registration number

                String pricequery = "SELECT rfee FROM booking  WHERE rentid = ?";

                // Create a PreparedStatement
                PreparedStatement preparedStatement = connection.prepareStatement(pricequery);
                preparedStatement.setString(1, selectedrentid);

                // Execute the query
                ResultSet resultSet = preparedStatement.executeQuery();

                // Check if a result is found
                if (resultSet.next()) {
                    rentFee = resultSet.getDouble("rfee");
                    total = rentFee + fine;

                    // You can now use the carPrice variable as needed
                } else {

                }

                // Close the database connection
            } catch (SQLException ex) {
            }
        } catch (Exception e) {
        }

        String rentid = (String) cmbrent.getSelectedItem();
        String returnID = ridtxt.getText();
        Date returnedDateR = returndate.getDate();
        int delay = Integer.parseInt(duetxt.getText());
        double fines = Double.parseDouble(finetxt.getText());
        double ftotal = total;

        try {
            try ( // Establish a database connection
                    java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/carrental?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "")) {
                String sql = "INSERT INTO departure  (returnid , rentid , returndate , due , penalty , total ) VALUES (?, ?, ?, ?, ?,?)";
                String sql2 = "UPDATE vehicle SET availability = 'YES' WHERE vid = ( SELECT vid FROM booking WHERE rentid = ?)";
                String sql3 = "DELETE FROM booking WHERE rentid = ? ";
                PreparedStatement preparedStatement = connection.prepareStatement(sql);
                PreparedStatement preparedStatement2 = connection.prepareStatement(sql2);
                PreparedStatement preparedStatement3 = connection.prepareStatement(sql3);
                preparedStatement2.setString(1, rentid);
                preparedStatement.setString(1, returnID);
                preparedStatement.setString(2, rentid);
                preparedStatement.setDate(3, new java.sql.Date(returnedDateR.getTime()));
                preparedStatement.setInt(4, delay);
                preparedStatement.setDouble(5, fines);
                preparedStatement.setDouble(6, ftotal);
                preparedStatement3.setString(1, rentid);

                int rowsAffected = preparedStatement.executeUpdate();
                preparedStatement2.executeUpdate();
                preparedStatement3.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Return added successfully.");
                    // Clear the input fields after successful insertion
                    cmbrent.setSelectedIndex(0);
                    ridtxt.setText("");
                    returndate.setDate(null);
                    duetxt.setText("");
                    finetxt.setText("");

                    DefaultTableModel tableModel = (DefaultTableModel) returntbl.getModel();
                    tableModel.addRow(new Object[]{returnID, rentid, returnedDateR, delay, fines, ftotal});
                    loadRentID();

                } else {
                    JOptionPane.showMessageDialog(this, "Failed to add return.");
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ADDBTNActionPerformed

    private void CALBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CALBTNActionPerformed

        String selectedRentID = cmbrent.getSelectedItem().toString();
        Date selectedReturnDate = returndate.getDate();

        // Retrieve the expected return date from the Rent table for the selected rent ID
        Date expectedReturnDate = getExpectedReturnDate(selectedRentID);

        // Calculate the delay in days
        long delayInMilliseconds = selectedReturnDate.getTime() - expectedReturnDate.getTime();
        delayInDays = (int) (delayInMilliseconds / (24 * 60 * 60 * 1000));
        String delay = String.valueOf(delayInDays);

        // Check if there is a delay
        if (delayInDays > 0) {
            // Calculate the fine based on your business logic
            fine = calculateFine(delayInDays);
            String fines = String.valueOf(fine);
            finetxt.setText(fines);
            duetxt.setText(delay);

        } else {
            int delayInDays = 0;
            String delayA = String.valueOf(delayInDays);
            duetxt.setText(delayA);
            fine = 0;
            String fineS = String.valueOf(fine);
            finetxt.setText(fineS);

        }       // TODO add your handling code here:
    }//GEN-LAST:event_CALBTNActionPerformed

    private double cost;

    private double calculateFine(int delayInDays) {

        try {
            String selectedrentid = cmbrent.getSelectedItem().toString();

            // Establish a database connection
            try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/carrental?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "")) {
                // SQL query to retrieve the price of a car based on its registration number

                String pricequery = "SELECT v.cost FROM vehicle v JOIN booking b ON v.vid = b.vid WHERE b.rentid = ?";

                // Create a PreparedStatement
                PreparedStatement preparedStatement = connection.prepareStatement(pricequery);
                preparedStatement.setString(1, selectedrentid);

                // Execute the query
                ResultSet resultSet = preparedStatement.executeQuery();

                // Check if a result is found
                if (resultSet.next()) {
                    cost = resultSet.getDouble("cost");
                    // You can now use the carPrice variable as needed
                } else {

                }

                // Close the database connection
            } catch (SQLException ex) {
            }
        } catch (Exception e) {
        }
        // Implement your fine calculation logic here
        // For example, you can charge a fixed amount per day of delay

        double finePerDay = cost / 2; // Change this to your fine rate per day
        return delayInDays * finePerDay;
    }

    private Date getExpectedReturnDate(String rentID) {
        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/carrental?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "")) {
            String sql = "SELECT rentout FROM booking WHERE rentid = ?";
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setString(1, rentID);
            ResultSet resultSet = preparedStatement.executeQuery();

            if (resultSet.next()) {
                return resultSet.getDate("rentout");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        }
        return null;
    }

    private void loadRentID() {
        try {
            // Establish a database connection
            try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/carrental?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "")) {
                String sql = "SELECT rentid FROM booking ";
                PreparedStatement preparedStatement = connection.prepareStatement(sql);
                ResultSet resultSet = preparedStatement.executeQuery();

                // Create a DefaultComboBoxModel to store the car registration data
                DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();

                // Iterate through the result set and add car registration values to the model
                while (resultSet.next()) {
                    String rentid = resultSet.getString("rentid");
                    comboBoxModel.addElement(rentid);
                }

                // Set the model with car registration data to the carCom JComboBox
                cmbrent.setModel(comboBoxModel);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        }
    }

    private void displayReturnedCar() {
        try {
            try ( // Establish a database connection
                    java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/carrental?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "")) {
                String sql = "SELECT returnid, rentid , returndate, due, penalty, total FROM departure";

                PreparedStatement preparedStatement = connection.prepareStatement(sql);
                ResultSet resultSet = preparedStatement.executeQuery();

                DefaultTableModel tableModel = (DefaultTableModel) returntbl.getModel();

                while (resultSet.next()) {
                    String returnid = resultSet.getString("returnid");
                    String rentid = resultSet.getString("rentid");
                    Date returndate = resultSet.getDate("returndate");
                    int due = resultSet.getInt("due");
                    double penalty = resultSet.getDouble("penalty");
                    double total = resultSet.getDouble("total");

                    // Add the fetched data as a new row in the table
                    tableModel.addRow(new Object[]{returnid, rentid, returndate, due, penalty, total});
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckOut().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADDBTN;
    private javax.swing.JButton CALBTN;
    private javax.swing.JLabel clbl;
    private javax.swing.JComboBox<String> cmbrent;
    private javax.swing.JLabel dashlbl;
    private javax.swing.JTextField duetxt;
    private javax.swing.JTextField finetxt;
    private javax.swing.JLabel inlbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel loglbl;
    private javax.swing.JLabel outlbl;
    private com.toedter.calendar.JDateChooser returndate;
    private javax.swing.JTable returntbl;
    private javax.swing.JTextField ridtxt;
    private javax.swing.JLabel vlbl;
    // End of variables declaration//GEN-END:variables
}
